// === breaking changes ===
// 1) data sources spit out one at a time

script {
  schema {}
  settings {
    namespace = "Term.Functions"
    version = "v2"
  }
  tasks {
    read_dbf {
      type = extract
      dataSource {
        type = dbf
        fields = ["GIVEN_NAME","SURNAME","LASTVISIT"]
        filePath = "/home/maurice/Downloads/dbf/VPATIENT.DBF"
      }
    }
    read_db {
      type = extract
      dataSource {
        type = sql
        connect = "jdbc:postgresql://localhost/gnm_dwh?user=postgres&password=actio"
        query {
          read = "select * from public.store"
        }
      }
    }
    read_rest {
      type = extract
      dataSource {
        type = rest
        format = "json"
        credential {
          username = "ops@actio.com.au"
          password = "0p$@@ct10"
        }
        query {
          read {
            uri = "https://stage-api-gnm.actio.com.au/api/store"
          }
        }
      }
    }
    get_name {
      type = term
      term = "ds => ds.root.data.map(store => store.attributes.name)"
    }
    flatten {
      type = each
    }
    my_template {
      type = template
      templates {
        text = "${toUpperCase(name)}"
        text2 = "select * from ${table}"
      }
    }
    read_stdin {
      type = extract
      dataSource {
        type = stdin
      }
    }
    test_legacy_function {
      type = transform
      batch = ["toUpperCase"]
    }
    batch {
      type = batch
      size = 3
    }
    print {
      type = print
      format = json
    }
  }
  pipelines {
    mypipe {
      pipe = "read_rest | get_name | flatten | print"
    }
  }
  services { }
  startup {
    exec = "mypipe"
  }
}
