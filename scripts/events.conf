entity_event = "event"

script {
  schema {}
  tasks {
    batch_events {
      type = transformTerm
      term = "ds => ds"
    }
    send_events {
      type = "stage_load"
      dataSource = ${datalake_datasource}
      dataSource {
        query {
          initialise = "CREATE TABLE IF NOT EXISTS datalake."${entity_event}"(runid uuid, createddate timestamp without time zone DEFAULT now(), configname character varying(100), pipename character varying(100), parameters jsonb, data jsonb, tenantid varchar(30), runstartdate timestamp, scheduledrunid uuid);create index IF NOT EXISTS idx_"${entity_event}"_lastrun on datalake."${entity_event}" (tenantid,createddate desc)"
          create = "insert into datalake."${entity_event}"(runid,configname,pipename,parameters,data,tenantid,runstartdate,scheduledrunid) values ('${run.id}','${run.configName}','${run.pipeName}','${sq(parameters.toJson())}','${sq(array.toJson())}','"${account_id}"','${run.startDate}','${run.scheduledRunId}')"
        }
      }
    }
  }
}

script {
  pipelines {
    p_events {
      pipe = "batch_events(event) | send_events"
    }
  }
}

