include "../../auth.conf"

view = ${name}
script {
  settings {
    namespace = "actio.datapipes.task.Term.Functions"
    version = "v2"
  }
  tasks {
    run_query {
      type = "extract"
      dataSource {
        type = "sql"
        connect = "jdbc:"${database_type}"://"${hostname}":"${port}"/"${database}"?user="${username}"&password="${password}
        query = {
          read {
            sql = ${sql_query}
          }
        }
      }
    }
    print {
      type = dump
      format = json
    }
    write_stage_LFS {
      type = stage_load
      dataSource {
        type = "file"
        behavior = "json"
        directory = "./data/"${run.id}
        query {
          create {
            filenameTemplate = ${view}"_"${run.id}"_${batchId}.json"
          }
        }
      }
    }
    authenticate {
      type = "extract"
      dataSource = ${flowhub_datasource}
      dataSource {
        type = "rest"
        credential {
          user = ${client_id}
          password = ${client_secret}
        }
        query {
          read {
            uri = ${flowhub_datasource.baseuri}"/api/login"
          }
        }
      }
    }
    load_datalake {
      type = load
      dataSource = ${flowhub_datasource}
      dataSource {
        type = "tusd"
        delays = [60000,120000,240000,480000,960000,1920000,3840000]
        directory = "./data/"${run.id}
        query {
          create {
            headers {
              access_token = "${this.body.access_token}"
            }
            uri = ${flowhub_datasource.baseuri}"/files/"
          }
        }
      }
    }
  }
  pipelines {
    p_pipe {
      pipe = "p_stage_local & p_datalake"
    }
    p_datalake {
      pipe = "authenticate | load_datalake"
    }
    p_stage_local {
      pipe = "run_query | write_stage_LFS"
    }
  }
  services { }
  startup {
    exec = "p_pipe"
  }
}



